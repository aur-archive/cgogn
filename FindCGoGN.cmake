# - Find CGoGN
# Find CGoGN includes and library
#
#  CGOGN_INCLUDE_DIRS   - where to find headers.
#  CGoGN_EXT_INCLUDES
#  CGOGN_LIBRARIES      - List of libraries when using CGoGN.
#  CGoGN_EXT_LIBS
#  CGOGN_FOUND          - True if CGoGN found.


find_package(OpenGL REQUIRED)
find_package(Boost COMPONENTS regex thread system REQUIRED)
find_package(ZLIB REQUIRED)
find_package(LibXml2 REQUIRED)
find_package(GLEW REQUIRED)
find_package(SuiteSparse REQUIRED)
SET(QT_USE_QTOPENGL TRUE)
SET(QT_USE_QTSVG TRUE)
find_package(Qt4 REQUIRED)
include(${QT_USE_FILE})


FIND_PATH(CGOGN_INCLUDE_DIR NAMES cgogn_onelib.h PATHS
	/usr/include/CGoGN/
)

SET (CGoGN_EXT_INCLUDES
	${CGOGN_INCLUDE_DIR}/ThirdParty/
	${OPENGL_INCLUDE_DIR}
	${GLEW_INCLUDE_DIRS}
	${ZLIB_INCLUDE_DIRS}
	${LIBXML2_INCLUDE_DIR}
	${Boost_INCLUDE_DIRS}
	${QT_INCLUDE_DIR}


)

# define libs for external libs
SET (CGoGN_EXT_LIBS
	${OPENGL_LIBRARY}
	${GLEW_LIBRARIES}
	${ZLIB_LIBRARIES}
	${LIBXML2_LIBRARIES}
	${Boost_SYSTEM_LIBRARY}
	${Boost_REGEX_LIBRARY}
	${Boost_THREAD_LIBRARY}
	${SUITESPARSE_LIBRARIES}
	${QT_LIBRARIES}
)





#LIBRARIES
FIND_LIBRARY(CGOGN_CGOGN NAMES cgogn PATHS
	/usr/lib/CGoGN/Release/
)
LIST(APPEND CGOGN_LIBRARIES ${CGOGN_CGOGN})



FIND_LIBRARY(CGOGN_ASSIMP NAMES assimp PATHS
	/usr/lib/CGoGN/Release/
)
LIST(APPEND CGOGN_LIBRARIES ${CGOGN_ASSIMP})

FIND_LIBRARY(CGOGN_NL NAMES nl PATHS
	/usr/lib/CGoGN/Release/
)
LIST(APPEND CGOGN_LIBRARIES ${CGOGN_NL})

FIND_LIBRARY(CGOGN_ZINRI NAMES Zinri PATHS
	/usr/lib/CGoGN/Release/
)
LIST(APPEND CGOGN_LIBRARIES ${CGOGN_ZINRI})

FIND_LIBRARY(CGOGN_PYTHONQT NAMES PythonQt PATHS
	/usr/lib/CGoGN/Release/
)
LIST(APPEND CGOGN_LIBRARIES ${CGOGN_PYTHONQT})




IF (CGOGN_INCLUDE_DIR AND CGOGN_LIBRARIES)
  SET(CGOGN_FOUND TRUE)
ENDIF (CGOGN_INCLUDE_DIR AND CGOGN_LIBRARIES)


IF (CGOGN_FOUND)
  SET(CGOGN_INCLUDE_DIRS ${CGOGN_INCLUDE_DIR})
  IF (NOT CGOGN_FIND_QUIETLY)
	MESSAGE("CGOGN_INCLUDE_DIRS : ${CGOGN_INCLUDE_DIRS}")
	MESSAGE("CGOGN_LIBRARIES : ${CGOGN_LIBRARIES}")
  ENDIF (NOT CGOGN_FIND_QUIETLY)
ELSE (CGOGN_FOUND)
  IF (CGOGN_FIND_REQUIRED)
    MESSAGE(FATAL_ERROR "Could not find CGoGN")
  ENDIF (CGOGN_FIND_REQUIRED)
ENDIF (CGOGN_FOUND)

